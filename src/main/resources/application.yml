server:
  port: 7138

spring:
    datasource:
      dynamic:
        datasource:
          master:
            type: com.alibaba.druid.pool.DruidDataSource
            driver-class-name: com.mysql.cj.jdbc.Driver
            url: jdbc:mysql://localhost:3306/dbgirl?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
            username: root
            password: 123456
    shardingsphere:
        datasource:
            names: sharding0,sharding1 # 数据源名称，多数据源以逗号分隔
            common:
              type: com.alibaba.druid.pool.DruidDataSource  # 数据库连接池类名称
              driver-class-name: com.mysql.cj.jdbc.Driver # 数据库驱动类名
            sharding0:
              url: jdbc:mysql://8.129.178.38:3306/sharding0?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
              username: root
              password: 123456
            sharding1:
              url: jdbc:mysql://8.129.178.38:3306/sharding1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
              username: root
              password: 123456
              #    filters: stat,wall,log4j     #druid监控配置
            dbcp2:
            min-idle: 5         #数据库连接池的最小维持连接数
            initial-size: 5     #初始化提供的连接数
            max-total: 5          #最大的连接数
            max-wait-millis: 200
          sharding:
              tables:
                girl:
                  actualDataNodes: sharding$->{0..1}.girl # $->{begin..end}表示范围区间,$->{[unit1, unit2, unit_x]}表示枚举值
                  databaseStrategy:
                    inline:
                      shardingColumn: id
                      algorithmExpression: sharding$->{id % 2}
                  keyGenerator:
                    type: SNOWFLAKE
                    column: id
          props:
              sql:
                show: true
mybatis:
      mapper-locations: classpath:mapper/*Mapper.xml
      type-aliases-package: com.springtest.demo.entities